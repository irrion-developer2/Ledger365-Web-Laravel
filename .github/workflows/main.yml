name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  run_pull:
    name: run pull
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Server
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          WORK_DIR: ${{ secrets.WORK_DIR }}
          MAIN_BRANCH: ${{ secrets.MAIN_BRANCH }}
        run: |
          # Create .ssh directory with secure permissions
          install -m 700 -d ~/.ssh

          # Write private key file with secure permissions
          printf "%s\n" "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Verify key file exists and has content
          if [ ! -s ~/.ssh/id_rsa ]; then
            echo "Error: SSH key file is empty or not created properly"
            exit 1
          fi

          # Add server to known hosts
          ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts 2>/dev/null

          # Start SSH agent
          eval "$(ssh-agent -s)"

          # Add private key to SSH agent (no passphrase needed)
          ssh-add ~/.ssh/id_rsa

          # Verify SSH agent has identity
          ssh-add -l || {
            echo "Error: No identities found in SSH agent"
            exit 1
          }

          # Run deployment command with verbose logging
          ssh -v -o StrictHostKeyChecking=no \
                -o ConnectTimeout=10 \
                -o ServerAliveInterval=10 \
                "$SSH_USER@$SSH_HOST" \
                "cd '$WORK_DIR' && \
                 git checkout '$MAIN_BRANCH' && \
                 git pull"

      - name: Cleanup
        if: always()
        shell: bash
        run: |
          # Kill SSH agent
          eval "$(ssh-agent -k)" || true
          # Remove sensitive files
          rm -rf ~/.ssh
